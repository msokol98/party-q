{"ast":null,"code":"import React from'react';import{CarouselProvider,Slider,Slide,DotGroup}from'pure-react-carousel';import'pure-react-carousel/dist/react-carousel.es.css';import useWindowSize from'hooks/useWindowSize';import'./styles.css';var getCurrentSongIdx=function getCurrentSongIdx(queue){var idx=-1;queue&&queue.forEach(function(song,index){if(song.status===\"CURRENT\"){idx=index;}});return idx;};var Queue=function Queue(_ref){var queue=_ref.queue,hostName=_ref.hostName;var isMobile=useWindowSize().width<768,currentSongIdx=getCurrentSongIdx(queue);return/*#__PURE__*/React.createElement(\"div\",null,queue&&/*#__PURE__*/React.createElement(CarouselProvider,{naturalSlideWidth:100,naturalSlideHeight:125,totalSlides:queue.length,visibleSlides:isMobile?1:3,currentSlide:isMobile?currentSongIdx:currentSongIdx-1},/*#__PURE__*/React.createElement(Slider,null,queue.map(function(song,index){var isCurrentSong=index===currentSongIdx;var statusColor=song.status===\"CURRENT\"||song.status===\"NEXT\"?\"#1DB954\":\"#F0F0F0\";var imgWidth;if(isMobile||!isCurrentSong)imgWidth=isMobile?\"90%\":\"40%\";else if(!isMobile)imgWidth=\"60%\";return/*#__PURE__*/React.createElement(Slide,{key:index,className:\"song\",style:{fontSize:isCurrentSong?'1.2rem':'1rem'}},/*#__PURE__*/React.createElement(\"h5\",null,song.name),/*#__PURE__*/React.createElement(\"h5\",null,\"By \",song.artist),/*#__PURE__*/React.createElement(\"img\",{src:song.imageURI,width:imgWidth,alt:\"song\"}),/*#__PURE__*/React.createElement(\"h5\",{style:{color:statusColor}},song.status),/*#__PURE__*/React.createElement(\"h5\",null,\"Picked by \",song.picker==\"\"?hostName:song.picker));}))));};export default Queue;","map":{"version":3,"sources":["/home/mitchell/Projects/party-q/web/src/components/party/active/mobile/tabs/Queue/index.js"],"names":["React","CarouselProvider","Slider","Slide","DotGroup","useWindowSize","getCurrentSongIdx","queue","idx","forEach","song","index","status","Queue","hostName","isMobile","width","currentSongIdx","length","map","isCurrentSong","statusColor","imgWidth","fontSize","name","artist","imageURI","color","picker"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,MAA3B,CAAmCC,KAAnC,CAA0CC,QAA1C,KAAyD,qBAAzD,CACA,MAAO,gDAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,qBAA1B,CACA,MAAO,cAAP,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACjC,GAAIC,CAAAA,GAAG,CAAG,CAAC,CAAX,CAEAD,KAAK,EAAIA,KAAK,CAACE,OAAN,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACpC,GAAGD,IAAI,CAACE,MAAL,GAAgB,SAAnB,CAA8B,CAC1BJ,GAAG,CAAGG,KAAN,CACH,CACJ,CAJQ,CAAT,CAMA,MAAOH,CAAAA,GAAP,CACH,CAVD,CAaA,GAAMK,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyB,IAAtBN,CAAAA,KAAsB,MAAtBA,KAAsB,CAAfO,QAAe,MAAfA,QAAe,CAE/B,GAAMC,CAAAA,QAAQ,CAAGV,aAAa,GAAGW,KAAhB,CAAwB,GAAzC,CAA8CC,cAAc,CAAGX,iBAAiB,CAACC,KAAD,CAAhF,CAEA,mBACQ,+BACKA,KAAK,eAEN,oBAAC,gBAAD,EACI,iBAAiB,CAAE,GADvB,CAEI,kBAAkB,CAAE,GAFxB,CAGI,WAAW,CAAEA,KAAK,CAACW,MAHvB,CAII,aAAa,CAAEH,QAAQ,CAAG,CAAH,CAAO,CAJlC,CAKI,YAAY,CAAEA,QAAQ,CAAGE,cAAH,CAAmBA,cAAc,CAAC,CAL5D,eAOI,oBAAC,MAAD,MACKV,KAAK,CAACY,GAAN,CAAU,SAACT,IAAD,CAAOC,KAAP,CAAiB,CACxB,GAAMS,CAAAA,aAAa,CAAGT,KAAK,GAAKM,cAAhC,CAEA,GAAMI,CAAAA,WAAW,CAAIX,IAAI,CAACE,MAAL,GAAgB,SAAhB,EAA6BF,IAAI,CAACE,MAAL,GAAgB,MAA9C,CACpB,SADoB,CACR,SADZ,CAGA,GAAIU,CAAAA,QAAJ,CAEA,GAAGP,QAAQ,EAAI,CAACK,aAAhB,CACIE,QAAQ,CAAGP,QAAQ,CAAG,KAAH,CAAW,KAA9B,CADJ,IAEK,IAAG,CAACA,QAAJ,CACDO,QAAQ,CAAG,KAAX,CAEJ,mBAEI,oBAAC,KAAD,EAAO,GAAG,CAAEX,KAAZ,CAAmB,SAAS,CAAC,MAA7B,CAAoC,KAAK,CAAE,CAACY,QAAQ,CAAEH,aAAa,CAAG,QAAH,CAAc,MAAtC,CAA3C,eACI,8BAAKV,IAAI,CAACc,IAAV,CADJ,cAEI,oCAAQd,IAAI,CAACe,MAAb,CAFJ,cAII,2BAAK,GAAG,CAAEf,IAAI,CAACgB,QAAf,CAAyB,KAAK,CAAEJ,QAAhC,CAA0C,GAAG,CAAC,MAA9C,EAJJ,cAMI,0BAAI,KAAK,CAAE,CAACK,KAAK,CAAEN,WAAR,CAAX,EAAkCX,IAAI,CAACE,MAAvC,CANJ,cAOI,2CAAeF,IAAI,CAACkB,MAAL,EAAgB,EAAhB,CAAqBd,QAArB,CAAgCJ,IAAI,CAACkB,MAApD,CAPJ,CAFJ,CAoBH,CAjCA,CADL,CAPJ,CAHJ,CADR,CAsDP,CA1DD,CA4DA,cAAef,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport { CarouselProvider, Slider, Slide, DotGroup} from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport useWindowSize from 'hooks/useWindowSize';\nimport './styles.css';\n\nconst getCurrentSongIdx = (queue) => {\n    var idx = -1;\n\n    queue && queue.forEach((song, index) => {\n        if(song.status === \"CURRENT\") {\n            idx = index;\n        }\n    });\n\n    return idx;\n}\n\n\nconst Queue = ({ queue, hostName }) => {\n\n        const isMobile = useWindowSize().width < 768, currentSongIdx = getCurrentSongIdx(queue);\n\n        return(\n                <div>\n                    {queue && \n\n                    <CarouselProvider\n                        naturalSlideWidth={100}\n                        naturalSlideHeight={125}\n                        totalSlides={queue.length}\n                        visibleSlides={isMobile ? 1 : 3}\n                        currentSlide={isMobile ? currentSongIdx: currentSongIdx-1}>\n\n                        <Slider>\n                            {queue.map((song, index) => {\n                                const isCurrentSong = index === currentSongIdx\n                                \n                                const statusColor = (song.status === \"CURRENT\" || song.status === \"NEXT\") ?\n                                \"#1DB954\" : \"#F0F0F0\"\n\n                                let imgWidth;\n\n                                if(isMobile || !isCurrentSong)\n                                    imgWidth = isMobile ? \"90%\" : \"40%\";\n                                else if(!isMobile)\n                                    imgWidth = \"60%\";\n\n                                return(\n\n                                    <Slide key={index} className='song' style={{fontSize: isCurrentSong ? '1.2rem' : '1rem'}}>\n                                        <h5>{song.name}</h5>\n                                        <h5>By {song.artist}</h5>\n\n                                        <img src={song.imageURI} width={imgWidth} alt=\"song\"></img>\n\n                                        <h5 style={{color: statusColor}}>{song.status}</h5>\n                                        <h5>Picked by {song.picker ==  \"\" ? hostName : song.picker}</h5>\n\n                                        {/*{song.status === \"CURRENT\" && this.props.isMobile && !this.state.isVotingToSkip && \n                                            <Button onClick={() => this.props.enterSkipVote(true)}>Vote to Skip Song</Button>}\n\n                                        {song.status === \"CURRENT\" && this.props.isMobile && this.state.isVotingToSkip && \n                                            <Button onClick={() => this.props.enterSkipVote(false)}>Undo Skip Vote</Button>}*/}\n\n                                    </Slide>\n\n                                )\n                            })}\n                        </Slider>\n                        \n                        \n\n                    </CarouselProvider>}\n                </div>\n        )\n\n}\n \nexport default Queue;\n\n"]},"metadata":{},"sourceType":"module"}