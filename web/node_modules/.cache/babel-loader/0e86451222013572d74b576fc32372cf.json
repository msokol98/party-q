{"ast":null,"code":"import _slicedToArray from\"/home/mitchell/Projects/party-q/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import{apiHost}from'config';import HasNoParty from'./has-no-party';import Party from'./active/PartyContainer';import Loading from'components/Loading';var PartyContainer=function PartyContainer(_ref){var member=_ref.member;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),hasParty=_useState4[0],setHasParty=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),party=_useState6[0],setParty=_useState6[1];var fetchHasParty=function fetchHasParty(){axios.get(\"\".concat(apiHost,\"/api/parties/exists\"),{params:{memberId:member.id}}).then(function(response){setHasParty(response.data);setLoading(false);});};var fetchParty=function fetchParty(){hasParty&&axios.get(\"\".concat(apiHost,\"/api/parties\"),{params:{memberId:member.id}}).then(function(response){return setParty(response.data);});};useEffect(fetchHasParty,[]);useEffect(fetchParty,[hasParty]);if(loading)return/*#__PURE__*/React.createElement(Loading,null);if(!hasParty)return/*#__PURE__*/React.createElement(HasNoParty,{member:member});if(!party)return/*#__PURE__*/React.createElement(Loading,null);return/*#__PURE__*/React.createElement(Party,{member:member,party:party});};export default PartyContainer;","map":{"version":3,"sources":["/home/mitchell/Projects/party-q/web/src/components/party/PartyContainer.js"],"names":["React","useState","useEffect","axios","apiHost","HasNoParty","Party","Loading","PartyContainer","member","loading","setLoading","hasParty","setHasParty","party","setParty","fetchHasParty","get","params","memberId","id","then","response","data","fetchParty"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,gBAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,eAELR,QAAQ,CAAC,IAAD,CAFH,wCAE5BS,OAF4B,eAEnBC,UAFmB,8BAGHV,QAAQ,EAHL,yCAG5BW,QAH4B,eAGlBC,WAHkB,8BAITZ,QAAQ,EAJC,yCAI5Ba,KAJ4B,eAIrBC,QAJqB,eAMnC,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxBb,KAAK,CAACc,GAAN,WAAab,OAAb,wBAA2C,CACvCc,MAAM,CAAE,CAACC,QAAQ,CAAEV,MAAM,CAACW,EAAlB,CAD+B,CAA3C,EAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAAET,WAAW,CAACS,QAAQ,CAACC,IAAV,CAAX,CAA4BZ,UAAU,CAAC,KAAD,CAAV,CAAmB,CAFrE,EAGH,CAJD,CAMA,GAAMa,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrBZ,QAAQ,EAAIT,KAAK,CAACc,GAAN,WAAab,OAAb,iBAAoC,CAC5Cc,MAAM,CAAE,CAACC,QAAQ,CAAEV,MAAM,CAACW,EAAlB,CADoC,CAApC,EAETC,IAFS,CAEJ,SAAAC,QAAQ,QAAIP,CAAAA,QAAQ,CAACO,QAAQ,CAACC,IAAV,CAAZ,EAFJ,CAAZ,CAGH,CAJD,CAMArB,SAAS,CAACc,aAAD,CAAgB,EAAhB,CAAT,CACAd,SAAS,CAACsB,UAAD,CAAa,CAACZ,QAAD,CAAb,CAAT,CAEA,GAAGF,OAAH,CAAY,mBAAO,oBAAC,OAAD,MAAP,CAEZ,GAAG,CAACE,QAAJ,CAAc,mBAAO,oBAAC,UAAD,EAAY,MAAM,CAAEH,MAApB,EAAP,CAEd,GAAG,CAACK,KAAJ,CAAW,mBAAO,oBAAC,OAAD,MAAP,CAEX,mBAAO,oBAAC,KAAD,EAAO,MAAM,CAAEL,MAAf,CAAuB,KAAK,CAAEK,KAA9B,EAAP,CAEH,CA7BD,CA+BA,cAAeN,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'config';\nimport HasNoParty from './has-no-party';\nimport Party from './active/PartyContainer';\nimport Loading from 'components/Loading';\n\nconst PartyContainer = ({ member }) => {\n\n    const [loading, setLoading] = useState(true);\n    const [hasParty, setHasParty] = useState();\n    const [party, setParty] = useState();\n\n    const fetchHasParty = () => {\n        axios.get(`${apiHost}/api/parties/exists`, {\n            params: {memberId: member.id}\n        }).then(response => { setHasParty(response.data); setLoading(false) })\n    }\n\n    const fetchParty = () => {\n        hasParty && axios.get(`${apiHost}/api/parties`, {\n            params: {memberId: member.id}\n        }).then(response => setParty(response.data))\n    }\n\n    useEffect(fetchHasParty, []);\n    useEffect(fetchParty, [hasParty]);\n\n    if(loading) return <Loading />;\n\n    if(!hasParty) return <HasNoParty member={member} />\n\n    if(!party) return <Loading />;\n\n    return <Party member={member} party={party} />\n\n}\n \nexport default PartyContainer;"]},"metadata":{},"sourceType":"module"}