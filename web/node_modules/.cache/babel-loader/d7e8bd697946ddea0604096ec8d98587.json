{"ast":null,"code":"import _slicedToArray from\"/home/mitchell/Projects/party-q/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import{apiHost}from'config';import Party from'../active/PartyContainer';var HostPartyContainer=function HostPartyContainer(_ref){var member=_ref.member;var _useState=useState(),_useState2=_slicedToArray(_useState,2),party=_useState2[0],setParty=_useState2[1];useEffect(function(){axios.post(\"\".concat(apiHost,\"/api/parties/new\"),member).then(function(response){return setParty(response.data);});},[]);if(!party)return/*#__PURE__*/React.createElement(React.Fragment,null);return/*#__PURE__*/React.createElement(Party,{member:member,party:party});};export default HostPartyContainer;","map":{"version":3,"sources":["/home/mitchell/Projects/party-q/web/src/components/party/host/HostPartyContainer.js"],"names":["React","useState","useEffect","axios","apiHost","Party","HostPartyContainer","member","party","setParty","post","then","response","data"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,eAEbN,QAAQ,EAFK,wCAEhCO,KAFgC,eAEzBC,QAFyB,eAIvCP,SAAS,CAAC,UAAM,CACZC,KAAK,CAACO,IAAN,WAAcN,OAAd,qBAAyCG,MAAzC,EACKI,IADL,CACU,SAAAC,QAAQ,QAAIH,CAAAA,QAAQ,CAACG,QAAQ,CAACC,IAAV,CAAZ,EADlB,EAEH,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAG,CAACL,KAAJ,CAAW,mBAAO,wCAAP,CAEX,mBAAO,oBAAC,KAAD,EAAO,MAAM,CAAED,MAAf,CAAuB,KAAK,CAAEC,KAA9B,EAAP,CACH,CAZD,CAcA,cAAeF,CAAAA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { apiHost } from 'config';\nimport Party from '../active/PartyContainer';\n\nconst HostPartyContainer = ({ member }) => {\n\n    const [party, setParty] = useState();\n\n    useEffect(() => {\n        axios.post(`${apiHost}/api/parties/new`, member)\n            .then(response => setParty(response.data))\n    }, []);\n\n    if(!party) return <></>\n\n    return <Party member={member} party={party} />\n}\n \nexport default HostPartyContainer;"]},"metadata":{},"sourceType":"module"}