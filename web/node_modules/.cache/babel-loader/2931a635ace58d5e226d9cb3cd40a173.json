{"ast":null,"code":"var _jsxFileName = \"/home/mitchell/Projects/party-q/web/src/components/party/active/PartyContainer.js\";\nimport react, { Component } from 'react';\nimport Mobile from './mobile';\nimport axios from 'axios';\nimport { apiHost } from 'config';\n\nclass PartyContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrentSong = () => {\n      if (!party || !party.host) return;\n      const token = party.host.token;\n      axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(response => {\n        const song = response.data.item;\n        if (!song) return;\n        if (currentSong && song) console.log(currentSong.id === song.id);\n        song && (!currentSong || song.id !== currentSong.id) && changeCurrentSong(song);\n      });\n    };\n\n    this.changeCurrentSong = song => {\n      localStorage.setItem('song', JSON.stringify(song));\n      setCS(song);\n      axios.post(`${apiHost}/api/songs/current?partyId=${party.id}`, {\n        artist: song.artists && song.artists[0] && song.artists[0].name,\n        imageURI: song.album && song.album.images && song.album.images[0] && song.album.images[0].url.song && song.name\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (member.id !== party.host.id) return;\n    setInterval(getCurrentSong, 2000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Mobile, {\n      party: { ...party,\n        currentSong\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default PartyContainer;","map":{"version":3,"sources":["/home/mitchell/Projects/party-q/web/src/components/party/active/PartyContainer.js"],"names":["react","Component","Mobile","axios","apiHost","PartyContainer","constructor","props","getCurrentSong","party","host","token","get","headers","then","response","song","data","item","currentSong","console","log","id","changeCurrentSong","localStorage","setItem","JSON","stringify","setCS","post","artist","artists","name","imageURI","album","images","url","componentDidMount","member","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAEnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,cALmB,GAKF,MAAM;AACnB,UAAG,CAACC,KAAD,IAAU,CAACA,KAAK,CAACC,IAApB,EAA0B;AAE1B,YAAMC,KAAK,GAAGF,KAAK,CAACC,IAAN,CAAWC,KAAzB;AACAR,MAAAA,KAAK,CAACS,GAAN,CAAU,wDAAV,EAAoE;AAChEC,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYF;AADxB;AADuD,OAApE,EAIGG,IAJH,CAIQC,QAAQ,IAAI;AAChB,cAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAA3B;AAEA,YAAG,CAACF,IAAJ,EAAU;AAEV,YAAGG,WAAW,IAAIH,IAAlB,EAAwBI,OAAO,CAACC,GAAR,CAAYF,WAAW,CAACG,EAAZ,KAAmBN,IAAI,CAACM,EAApC;AAExBN,QAAAA,IAAI,KAAK,CAACG,WAAD,IAAgBH,IAAI,CAACM,EAAL,KAAYH,WAAW,CAACG,EAA7C,CAAJ,IAAwDC,iBAAiB,CAACP,IAAD,CAAzE;AACH,OAZD;AAaH,KAtBkB;;AAAA,SAwBnBO,iBAxBmB,GAwBCP,IAAI,IAAI;AACxBQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAA7B;AACAY,MAAAA,KAAK,CAACZ,IAAD,CAAL;AAEAb,MAAAA,KAAK,CAAC0B,IAAN,CAAY,GAAEzB,OAAQ,8BAA6BK,KAAK,CAACa,EAAG,EAA5D,EAA+D;AAC3DQ,QAAAA,MAAM,EAAEd,IAAI,CAACe,OAAL,IAAgBf,IAAI,CAACe,OAAL,CAAa,CAAb,CAAhB,IAAmCf,IAAI,CAACe,OAAL,CAAa,CAAb,EAAgBC,IADA;AAE3DC,QAAAA,QAAQ,EAAEjB,IAAI,CAACkB,KAAL,IAAclB,IAAI,CAACkB,KAAL,CAAWC,MAAzB,IAAmCnB,IAAI,CAACkB,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAnC,IAA2DnB,IAAI,CAACkB,KAAL,CAAWC,MAAX,CAAkB,CAAlB,EAAqBC,GAArB,CACrEpB,IADU,IACFA,IAAI,CAACgB;AAH8C,OAA/D;AAKH,KAjCkB;AAElB;;AAiCDK,EAAAA,iBAAiB,GAAG;AAChB,QAAGC,MAAM,CAAChB,EAAP,KAAcb,KAAK,CAACC,IAAN,CAAWY,EAA5B,EAAgC;AAChCiB,IAAAA,WAAW,CAAC/B,cAAD,EAAiB,IAAjB,CAAX;AACH;;AAEDgC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,EAAC,GAAG/B,KAAJ;AAAWU,QAAAA;AAAX,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAhDkC;;AAmDvC,eAAed,cAAf","sourcesContent":["import react, { Component } from 'react';\nimport Mobile from './mobile';\nimport axios from 'axios';\nimport { apiHost } from 'config';\n\nclass PartyContainer extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    getCurrentSong = () => {\n        if(!party || !party.host) return;\n\n        const token = party.host.token;\n        axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        }).then(response => {\n            const song = response.data.item;\n\n            if(!song) return;\n\n            if(currentSong && song) console.log(currentSong.id === song.id) \n\n            song && (!currentSong || song.id !== currentSong.id) && changeCurrentSong(song);\n        })\n    }\n\n    changeCurrentSong = song => {\n        localStorage.setItem('song', JSON.stringify(song));\n        setCS(song);\n\n        axios.post(`${apiHost}/api/songs/current?partyId=${party.id}`, {\n            artist: song.artists && song.artists[0] && song.artists[0].name,\n            imageURI: song.album && song.album.images && song.album.images[0] && song.album.images[0].url.\n            song && song.name\n        });\n    }\n\n    componentDidMount() {\n        if(member.id !== party.host.id) return;\n        setInterval(getCurrentSong, 2000);\n    }\n      \n    render() {\n        return(\n            <div>\n                <Mobile party={{...party, currentSong}} />\n            </div>\n        )\n    }\n}\n \nexport default PartyContainer;"]},"metadata":{},"sourceType":"module"}