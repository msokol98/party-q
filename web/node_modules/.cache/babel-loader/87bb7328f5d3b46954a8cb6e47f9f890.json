{"ast":null,"code":"var _jsxFileName = \"/home/mitchell/Projects/party-q/web/src/components/party/active/PartyContainer.js\";\nimport React, { Component } from 'react';\nimport Mobile from './mobile';\nimport axios from 'axios';\nimport { apiHost } from 'config';\nimport useFormatSong from 'hooks/useFormatSong';\n\nclass PartyContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentSong: JSON.parse(localStorage.getItem('currentSong'))\n    };\n\n    this.getCurrentSong = () => {\n      const {\n        party\n      } = this.props;\n      const {\n        currentSong\n      } = this.state;\n      if (!party || !party.host) return;\n      const token = party.host.token;\n      axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(response => {\n        const song = response.data.item;\n        song && (!currentSong || song.id !== currentSong.id) && this.changeCurrentSong(song);\n      });\n    };\n\n    this.changeCurrentSong = song => {\n      const {\n        party\n      } = this.props;\n      this.setState({\n        currentSong: song\n      }, () => localStorage.setItem());\n      axios.post(`${apiHost}/api/songs/current?partyId=${party.id}`, useFormatSong(song));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      party,\n      member\n    } = this.props;\n    if (member.id !== party.host.id) return;\n    setInterval(this.getCurrentSong, 2000);\n  }\n\n  render() {\n    const {\n      currentSong\n    } = this.state;\n    const {\n      party,\n      member\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Mobile, {\n      party: { ...party,\n        currentSong\n      },\n      member: member,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default PartyContainer;","map":{"version":3,"sources":["/home/mitchell/Projects/party-q/web/src/components/party/active/PartyContainer.js"],"names":["React","Component","Mobile","axios","apiHost","useFormatSong","PartyContainer","state","currentSong","JSON","parse","localStorage","getItem","getCurrentSong","party","props","host","token","get","headers","then","response","song","data","item","id","changeCurrentSong","setState","setItem","post","componentDidMount","member","setInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCM,KAFmC,GAE3B;AAACC,MAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX;AAAd,KAF2B;;AAAA,SAInCC,cAJmC,GAIlB,MAAM;AACnB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACA,YAAM;AAAEP,QAAAA;AAAF,UAAkB,KAAKD,KAA7B;AAEA,UAAG,CAACO,KAAD,IAAU,CAACA,KAAK,CAACE,IAApB,EAA0B;AAE1B,YAAMC,KAAK,GAAGH,KAAK,CAACE,IAAN,CAAWC,KAAzB;AACAd,MAAAA,KAAK,CAACe,GAAN,CAAU,wDAAV,EAAoE;AAChEC,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYF;AADxB;AADuD,OAApE,EAIGG,IAJH,CAIQC,QAAQ,IAAI;AAChB,cAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAA3B;AACAF,QAAAA,IAAI,KAAK,CAACd,WAAD,IAAgBc,IAAI,CAACG,EAAL,KAAYjB,WAAW,CAACiB,EAA7C,CAAJ,IAAwD,KAAKC,iBAAL,CAAuBJ,IAAvB,CAAxD;AACH,OAPD;AAQH,KAnBkC;;AAAA,SAqBnCI,iBArBmC,GAqBfJ,IAAI,IAAI;AACxB,YAAM;AAAER,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACA,WAAKY,QAAL,CAAc;AAACnB,QAAAA,WAAW,EAAEc;AAAd,OAAd,EAAmC,MAAMX,YAAY,CAACiB,OAAb,EAAzC;AACAzB,MAAAA,KAAK,CAAC0B,IAAN,CAAY,GAAEzB,OAAQ,8BAA6BU,KAAK,CAACW,EAAG,EAA5D,EAA+DpB,aAAa,CAACiB,IAAD,CAA5E;AACH,KAzBkC;AAAA;;AA2BnCQ,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEhB,MAAAA,KAAF;AAASiB,MAAAA;AAAT,QAAoB,KAAKhB,KAA/B;AAEA,QAAGgB,MAAM,CAACN,EAAP,KAAcX,KAAK,CAACE,IAAN,CAAWS,EAA5B,EAAgC;AAChCO,IAAAA,WAAW,CAAC,KAAKnB,cAAN,EAAsB,IAAtB,CAAX;AACH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEzB,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AACA,UAAM;AAAEO,MAAAA,KAAF;AAASiB,MAAAA;AAAT,QAAoB,KAAKhB,KAA/B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,EAAC,GAAGD,KAAJ;AAAWN,QAAAA;AAAX,OAAf;AAAwC,MAAA,MAAM,EAAEuB,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA1CkC;;AA6CvC,eAAezB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport Mobile from './mobile';\nimport axios from 'axios';\nimport { apiHost } from 'config';\nimport useFormatSong from 'hooks/useFormatSong';\n\nclass PartyContainer extends Component {\n\n    state = {currentSong: JSON.parse(localStorage.getItem('currentSong'))};\n\n    getCurrentSong = () => {\n        const { party } = this.props;\n        const { currentSong } = this.state;\n\n        if(!party || !party.host) return;\n\n        const token = party.host.token;\n        axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        }).then(response => {\n            const song = response.data.item;\n            song && (!currentSong || song.id !== currentSong.id) && this.changeCurrentSong(song);\n        })\n    }\n\n    changeCurrentSong = song => {\n        const { party } = this.props;\n        this.setState({currentSong: song}, () => localStorage.setItem());\n        axios.post(`${apiHost}/api/songs/current?partyId=${party.id}`, useFormatSong(song));\n    }\n\n    componentDidMount() {\n        const { party, member } = this.props;\n\n        if(member.id !== party.host.id) return;\n        setInterval(this.getCurrentSong, 2000);\n    }\n      \n    render() {\n        const { currentSong } = this.state;\n        const { party, member } = this.props;\n        return(\n            <div>\n                <Mobile party={{...party, currentSong}} member={member} />\n            </div>\n        )\n    }\n}\n \nexport default PartyContainer;"]},"metadata":{},"sourceType":"module"}