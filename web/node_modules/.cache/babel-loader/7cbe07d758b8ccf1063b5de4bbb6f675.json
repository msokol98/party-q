{"ast":null,"code":"var _jsxFileName = \"/home/mitchell/Projects/party-q/web/src/components/party/active/PartyContainer.js\";\nimport React, { Component } from 'react';\nimport Mobile from './mobile';\nimport axios from 'axios';\nimport { apiHost } from 'config';\n\nclass PartyContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentSong: null\n    };\n\n    this.getCurrentSong = () => {\n      const {\n        party\n      } = this.props;\n      const {\n        currentSong\n      } = this.state;\n      if (!party || !party.host) return;\n      const token = party.host.token;\n      axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(response => {\n        const song = response.data.item;\n        if (!song) return;\n        if (currentSong && song) console.log(currentSong.id === song.id);\n        song && (!currentSong || song.id !== currentSong.id) && this.changeCurrentSong(song);\n      });\n    };\n\n    this.changeCurrentSong = song => {\n      const {\n        party\n      } = this.props;\n      this.setState({\n        currentSong: song\n      });\n      console.log('POSTING THIS SONG: ' + song.name);\n      axios.post(`${apiHost}/api/songs/current?partyId=${party.id}`, {\n        artist: song.artists && song.artists[0] && song.artists[0].name,\n        imageURI: song.album && song.album.images && song.album.images[0] && song.album.images[0].url,\n        name: song && song.name\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      party,\n      member\n    } = this.props;\n    if (member.id !== party.host.id) return;\n    setInterval(this.getCurrentSong, 2000);\n  }\n\n  render() {\n    const {\n      currentSong\n    } = this.state;\n    const {\n      party\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Mobile, {\n      party: { ...party,\n        currentSong\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default PartyContainer;","map":{"version":3,"sources":["/home/mitchell/Projects/party-q/web/src/components/party/active/PartyContainer.js"],"names":["React","Component","Mobile","axios","apiHost","PartyContainer","state","currentSong","getCurrentSong","party","props","host","token","get","headers","then","response","song","data","item","console","log","id","changeCurrentSong","setState","name","post","artist","artists","imageURI","album","images","url","componentDidMount","member","setInterval","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Mobile from './mobile';\nimport axios from 'axios';\nimport { apiHost } from 'config';\n\nclass PartyContainer extends Component {\n\n    state = {currentSong: null};\n\n    getCurrentSong = () => {\n        const { party } = this.props;\n        const { currentSong } = this.state;\n\n        if(!party || !party.host) return;\n\n        const token = party.host.token;\n        axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n            headers: {\n                'Authorization': 'Bearer ' + token\n            }\n        }).then(response => {\n            const song = response.data.item;\n\n            if(!song) return;\n\n            if(currentSong && song) console.log(currentSong.id === song.id) \n\n            song && (!currentSong || song.id !== currentSong.id) && this.changeCurrentSong(song);\n        })\n    }\n\n    changeCurrentSong = song => {\n        const { party } = this.props;\n        this.setState({currentSong: song});\n\n        console.log('POSTING THIS SONG: ' + song.name)\n\n        axios.post(`${apiHost}/api/songs/current?partyId=${party.id}`, {\n            artist: song.artists && song.artists[0] && song.artists[0].name,\n            imageURI: song.album && song.album.images && song.album.images[0] && song.album.images[0].url,\n            name: song && song.name\n        });\n    }\n\n    componentDidMount() {\n        const { party, member } = this.props;\n\n        if(member.id !== party.host.id) return;\n        setInterval(this.getCurrentSong, 2000);\n    }\n      \n    render() {\n        const { currentSong } = this.state;\n        const { party } = this.props;\n        return(\n            <div>\n                <Mobile party={{...party, currentSong}} />\n            </div>\n        )\n    }\n}\n \nexport default PartyContainer;"]},"metadata":{},"sourceType":"module"}